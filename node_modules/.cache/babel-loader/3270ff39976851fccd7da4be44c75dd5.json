{"ast":null,"code":"var _jsxFileName = \"/root/MiNS/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState, useRef } from \"react\";\nimport \"./styles.css\";\nimport ReactFlow from \"react-flow-renderer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst elements = [{\n  id: \"1\",\n  data: {\n    label: \"Node 1\"\n  },\n  position: {\n    x: 250,\n    y: 5\n  }\n}, // you can also pass a React component as a label\n{\n  id: \"2\",\n  data: {\n    label: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Node 2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 29\n    }, this)\n  },\n  position: {\n    x: 100,\n    y: 100\n  }\n}, {\n  id: \"e1-2\",\n  source: \"1\",\n  target: \"2\",\n  animated: true\n}];\nexport default function App() {\n  _s();\n\n  const [els, setEls] = useState(initialElements);\n  const yPos = useRef(0);\n  const addNode = useCallback(() => {\n    yPos.current += 50;\n    setEls(els => {\n      console.log(els);\n      return [...els, {\n        id: Math.random(),\n        position: {\n          x: 100,\n          y: yPos.current\n        },\n        data: {\n          label: \"yo\"\n        }\n      }];\n    });\n  }, []);\n  const addEdge = useCallback(_ref => {\n    let {\n      source,\n      target\n    } = _ref;\n    setEls(els => {\n      console.log(source, target);\n      return [...els, {\n        id: Math.random(),\n        source,\n        target\n      }];\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: 300\n      },\n      children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n        elements: els,\n        onConnect: addEdge\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addNode,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"fqxjYHQhbnuLUQkNooHqiSMB0wc=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/root/MiNS/src/App.js"],"names":["React","useCallback","useState","useRef","ReactFlow","elements","id","data","label","position","x","y","source","target","animated","App","els","setEls","initialElements","yPos","addNode","current","console","log","Math","random","addEdge","height"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,EAAuCC,MAAvC,QAAqD,OAArD;AACA,OAAO,cAAP;AACA,OAAOC,SAAP,MAAsB,qBAAtB;;AAEA,MAAMC,QAAQ,GAAG,CACf;AAAEC,EAAAA,EAAE,EAAE,GAAN;AAAWC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAAjB;AAAsCC,EAAAA,QAAQ,EAAE;AAAEC,IAAAA,CAAC,EAAE,GAAL;AAAUC,IAAAA,CAAC,EAAE;AAAb;AAAhD,CADe,EAEf;AACA;AAAEL,EAAAA,EAAE,EAAE,GAAN;AAAWC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,KAAK,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAT,GAAjB;AAA+CC,EAAAA,QAAQ,EAAE;AAAEC,IAAAA,CAAC,EAAE,GAAL;AAAUC,IAAAA,CAAC,EAAE;AAAb;AAAzD,CAHe,EAIf;AAAEL,EAAAA,EAAE,EAAE,MAAN;AAAcM,EAAAA,MAAM,EAAE,GAAtB;AAA2BC,EAAAA,MAAM,EAAE,GAAnC;AAAwCC,EAAAA,QAAQ,EAAE;AAAlD,CAJe,CAAjB;AAOA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC5B,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBf,QAAQ,CAACgB,eAAD,CAA9B;AACA,QAAMC,IAAI,GAAGhB,MAAM,CAAC,CAAD,CAAnB;AAEA,QAAMiB,OAAO,GAAGnB,WAAW,CAAC,MAAM;AAChCkB,IAAAA,IAAI,CAACE,OAAL,IAAgB,EAAhB;AACAJ,IAAAA,MAAM,CAAED,GAAD,IAAS;AACdM,MAAAA,OAAO,CAACC,GAAR,CAAYP,GAAZ;AACA,aAAO,CACL,GAAGA,GADE,EAEL;AACEV,QAAAA,EAAE,EAAEkB,IAAI,CAACC,MAAL,EADN;AAEEhB,QAAAA,QAAQ,EAAE;AAAEC,UAAAA,CAAC,EAAE,GAAL;AAAUC,UAAAA,CAAC,EAAEQ,IAAI,CAACE;AAAlB,SAFZ;AAGEd,QAAAA,IAAI,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT;AAHR,OAFK,CAAP;AAQD,KAVK,CAAN;AAWD,GAb0B,EAaxB,EAbwB,CAA3B;AAeA,QAAMkB,OAAO,GAAGzB,WAAW,CAAC,QAAwB;AAAA,QAAvB;AAAEW,MAAAA,MAAF;AAAUC,MAAAA;AAAV,KAAuB;AAClDI,IAAAA,MAAM,CAAED,GAAD,IAAS;AACdM,MAAAA,OAAO,CAACC,GAAR,CAAYX,MAAZ,EAAoBC,MAApB;AACA,aAAO,CACL,GAAGG,GADE,EAEL;AACEV,QAAAA,EAAE,EAAEkB,IAAI,CAACC,MAAL,EADN;AAEEb,QAAAA,MAFF;AAGEC,QAAAA;AAHF,OAFK,CAAP;AAQD,KAVK,CAAN;AAWD,GAZ0B,EAYxB,EAZwB,CAA3B;AAcA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAK,MAAA,KAAK,EAAE;AAAEc,QAAAA,MAAM,EAAE;AAAV,OAAZ;AAAA,6BACE,QAAC,SAAD;AAAW,QAAA,QAAQ,EAAEX,GAArB;AAA0B,QAAA,SAAS,EAAEU;AAArC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAQ,MAAA,OAAO,EAAEN,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GAzCuBL,G;;KAAAA,G","sourcesContent":["import React, { useCallback, useState, useRef } from \"react\";\nimport \"./styles.css\";\nimport ReactFlow from \"react-flow-renderer\";\n\nconst elements = [\n  { id: \"1\", data: { label: \"Node 1\" }, position: { x: 250, y: 5 } },\n  // you can also pass a React component as a label\n  { id: \"2\", data: { label: <div>Node 2</div> }, position: { x: 100, y: 100 } },\n  { id: \"e1-2\", source: \"1\", target: \"2\", animated: true },\n];\n\nexport default function App() {\n  const [els, setEls] = useState(initialElements);\n  const yPos = useRef(0);\n\n  const addNode = useCallback(() => {\n    yPos.current += 50;\n    setEls((els) => {\n      console.log(els);\n      return [\n        ...els,\n        {\n          id: Math.random(),\n          position: { x: 100, y: yPos.current },\n          data: { label: \"yo\" },\n        },\n      ];\n    });\n  }, []);\n\n  const addEdge = useCallback(({ source, target }) => {\n    setEls((els) => {\n      console.log(source, target);\n      return [\n        ...els,\n        {\n          id: Math.random(),\n          source,\n          target,\n        },\n      ];\n    });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div style={{ height: 300 }}>\n        <ReactFlow elements={els} onConnect={addEdge} />\n      </div>\n      <button onClick={addNode}>Add</button>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}