{"ast":null,"code":"var _jsxFileName = \"/root/MiNS/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState, useRef } from \"react\";\nimport \"./styles.css\";\nimport ReactFlow from \"react-flow-renderer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialElements = [{\n  id: \"1\",\n  type: \"input\",\n  // input node\n  data: {\n    label: \"Input Node\"\n  },\n  position: {\n    x: 100,\n    y: 0\n  }\n} // default node\n// {\n//   id: \"2\",\n//   // you can also pass a React component as a label\n//   data: { label: <div>Default Node</div> },\n//   position: { x: 100, y: 50 }\n// },\n// {\n//   id: \"3\",\n//   type: \"default\", // output node\n//   data: { label: \"Output Node\" },\n//   position: { x: 100, y: 100 }\n// },\n// animated edge\n// { id: \"e1-2\", source: \"1\", target: \"2\", animated: true },\n// { id: \"e2-3\", source: \"2\", target: \"3\" }\n];\nexport default function App() {\n  _s();\n\n  const [els, setEls] = useState(initialElements);\n  const yPos = useRef(0);\n  const addNode = useCallback(() => {\n    yPos.current += 50;\n    setEls(els => {\n      console.log(els);\n      return [...els, {\n        id: Math.random(),\n        position: {\n          x: 100,\n          y: yPos.current\n        },\n        data: {\n          label: \"yo\"\n        }\n      }];\n    });\n  }, []);\n  const addEdge = useCallback(_ref => {\n    let {\n      source,\n      target\n    } = _ref;\n    setEls(els => {\n      console.log(source, target);\n      return [...els, {\n        id: Math.random(),\n        source,\n        target\n      }];\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: 300\n      },\n      children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n        elements: els,\n        onConnect: addEdge\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addNode,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"fqxjYHQhbnuLUQkNooHqiSMB0wc=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/root/MiNS/src/App.js"],"names":["React","useCallback","useState","useRef","ReactFlow","initialElements","id","type","data","label","position","x","y","App","els","setEls","yPos","addNode","current","console","log","Math","random","addEdge","source","target","height"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,EAAuCC,MAAvC,QAAqD,OAArD;AACA,OAAO,cAAP;AACA,OAAOC,SAAP,MAAsB,qBAAtB;;AAEA,MAAMC,eAAe,GAAG,CACtB;AACEC,EAAAA,EAAE,EAAE,GADN;AAEEC,EAAAA,IAAI,EAAE,OAFR;AAEiB;AACfC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAHR;AAIEC,EAAAA,QAAQ,EAAE;AAAEC,IAAAA,CAAC,EAAE,GAAL;AAAUC,IAAAA,CAAC,EAAE;AAAb;AAJZ,CADsB,CAOtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtBsB,CAAxB;AAyBA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC5B,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBb,QAAQ,CAACG,eAAD,CAA9B;AACA,QAAMW,IAAI,GAAGb,MAAM,CAAC,CAAD,CAAnB;AAEA,QAAMc,OAAO,GAAGhB,WAAW,CAAC,MAAM;AAChCe,IAAAA,IAAI,CAACE,OAAL,IAAgB,EAAhB;AACAH,IAAAA,MAAM,CAAED,GAAD,IAAS;AACdK,MAAAA,OAAO,CAACC,GAAR,CAAYN,GAAZ;AACA,aAAO,CACL,GAAGA,GADE,EAEL;AACER,QAAAA,EAAE,EAAEe,IAAI,CAACC,MAAL,EADN;AAEEZ,QAAAA,QAAQ,EAAE;AAAEC,UAAAA,CAAC,EAAE,GAAL;AAAUC,UAAAA,CAAC,EAAEI,IAAI,CAACE;AAAlB,SAFZ;AAGEV,QAAAA,IAAI,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT;AAHR,OAFK,CAAP;AAQD,KAVK,CAAN;AAWD,GAb0B,EAaxB,EAbwB,CAA3B;AAeA,QAAMc,OAAO,GAAGtB,WAAW,CAAC,QAAwB;AAAA,QAAvB;AAAEuB,MAAAA,MAAF;AAAUC,MAAAA;AAAV,KAAuB;AAClDV,IAAAA,MAAM,CAAED,GAAD,IAAS;AACdK,MAAAA,OAAO,CAACC,GAAR,CAAYI,MAAZ,EAAoBC,MAApB;AACA,aAAO,CACL,GAAGX,GADE,EAEL;AACER,QAAAA,EAAE,EAAEe,IAAI,CAACC,MAAL,EADN;AAEEE,QAAAA,MAFF;AAGEC,QAAAA;AAHF,OAFK,CAAP;AAQD,KAVK,CAAN;AAWD,GAZ0B,EAYxB,EAZwB,CAA3B;AAcA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAZ;AAAA,6BACE,QAAC,SAAD;AAAW,QAAA,QAAQ,EAAEZ,GAArB;AAA0B,QAAA,SAAS,EAAES;AAArC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAQ,MAAA,OAAO,EAAEN,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GAzCuBJ,G;;KAAAA,G","sourcesContent":["import React, { useCallback, useState, useRef } from \"react\";\nimport \"./styles.css\";\nimport ReactFlow from \"react-flow-renderer\";\n\nconst initialElements = [\n  {\n    id: \"1\",\n    type: \"input\", // input node\n    data: { label: \"Input Node\" },\n    position: { x: 100, y: 0 },\n  },\n  // default node\n  // {\n  //   id: \"2\",\n  //   // you can also pass a React component as a label\n  //   data: { label: <div>Default Node</div> },\n  //   position: { x: 100, y: 50 }\n  // },\n  // {\n  //   id: \"3\",\n  //   type: \"default\", // output node\n  //   data: { label: \"Output Node\" },\n  //   position: { x: 100, y: 100 }\n  // },\n  // animated edge\n  // { id: \"e1-2\", source: \"1\", target: \"2\", animated: true },\n  // { id: \"e2-3\", source: \"2\", target: \"3\" }\n];\n\nexport default function App() {\n  const [els, setEls] = useState(initialElements);\n  const yPos = useRef(0);\n\n  const addNode = useCallback(() => {\n    yPos.current += 50;\n    setEls((els) => {\n      console.log(els);\n      return [\n        ...els,\n        {\n          id: Math.random(),\n          position: { x: 100, y: yPos.current },\n          data: { label: \"yo\" },\n        },\n      ];\n    });\n  }, []);\n\n  const addEdge = useCallback(({ source, target }) => {\n    setEls((els) => {\n      console.log(source, target);\n      return [\n        ...els,\n        {\n          id: Math.random(),\n          source,\n          target,\n        },\n      ];\n    });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div style={{ height: 300 }}>\n        <ReactFlow elements={els} onConnect={addEdge} />\n      </div>\n      <button onClick={addNode}>Add</button>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}